name: Zig-Cross-Compile

env:
  DEBUG: 'napi:*'

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  build:
    name: Zig-Cross-Compile-On-Linux
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        target:
          [
            'x86_64-apple-darwin',
            'x86_64-unknown-linux-musl',
            'aarch64-unknown-linux-musl',
            'armv7-unknown-linux-musleabihf',
          ]

    steps:
      - run: docker run --rm --privileged multiarch/qemu-user-static:register --reset
      - uses: actions/checkout@v3
      - name: Setup node
        uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: 'yarn'
      - name: Install
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: stable
          targets: ${{ matrix.target }}
      - name: Cache cargo
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: stable-zig-${{ matrix.target }}-cargo-cache
      - name: Install ziglang
        uses: goto-bus-stop/setup-zig@v2
        with:
          version: 0.11.0
      - name: Install dependencies
        run: yarn install --immutable --mode=skip-build
      - name: 'Build TypeScript'
        run: yarn build
      - name: Setup node
        uses: actions/setup-node@v3
        with:
          node-version: 18
      - name: Cross build native tests
        run: |
          yarn workspace compat-mode-examples build --target ${{ matrix.target }} --zig
          yarn workspace examples build --target ${{ matrix.target }} --zig
      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: compat-${{ matrix.target }}
          path: ./examples/napi-compat-mode/index.node
          if-no-files-found: error
      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: napi-${{ matrix.target }}
          path: ./examples/napi/index.node
          if-no-files-found: error

  test:
    name: Test Zig Cross Compiled ${{ matrix.settings.target }}
    runs-on: ${{ matrix.settings.host }}
    needs:
      - build
    strategy:
      fail-fast: false
      matrix:
        settings:
          - host: ubuntu-latest
            target: x86_64-unknown-linux-musl
          - host: macos-latest
            target: x86_64-apple-darwin
          - host: ubuntu-latest
            target: aarch64-unknown-linux-musl
            docker-platform: arm64
          - host: ubuntu-latest
            target: armv7-unknown-linux-musleabihf
            docker-platform: arm/v7
    steps:
      - uses: actions/checkout@v3
      - name: Setup node
        uses: actions/setup-node@v3
        with:
          node-version: 18
          check-latest: true
          cache: 'yarn'
      - name: Install dependencies
        run: |
          yarn config set --json supportedArchitectures.libc '["current", "musl"]'
          yarn config set --json supportedArchitectures.cpu '["current", "arm64", "arm"]'
          yarn install --immutable --mode=skip-build
      - name: Download artifacts
        uses: actions/download-artifact@v3
        with:
          name: napi-${{ matrix.settings.target }}
          path: ./examples/napi/
      - name: Download artifacts
        uses: actions/download-artifact@v3
        with:
          name: compat-${{ matrix.settings.target }}
          path: ./examples/napi-compat-mode/
      - name: List files
        run: |
          ls ./examples/napi
          ls ./examples/napi-compat-mode
      - name: Test
        run: yarn test --verbose
        env:
          SKIP_UNWIND_TEST: 1
        if: matrix.settings.host == 'macos-latest'
      - run: docker run --rm --privileged multiarch/qemu-user-static --reset -p yes
        if: matrix.settings.host == 'ubuntu-latest'
      - name: Test
        uses: addnab/docker-run-action@v3
        if: matrix.settings.host == 'ubuntu-latest' && matrix.settings.target != 'x86_64-unknown-linux-musl'
        with:
          image: node:18-alpine
          options: --platform linux/${{ matrix.settings.docker-platform }} -v ${{ github.workspace }}:/napi-rs -w /napi-rs
          run: |
            set -e
            yarn test
      - name: Test
        uses: addnab/docker-run-action@v3
        if: matrix.settings.target == 'x86_64-unknown-linux-musl'
        with:
          image: ghcr.io/napi-rs/napi-rs/nodejs-rust:lts-alpine
          options: -v ${{ github.workspace }}:/napi-rs -w /napi-rs
          run: yarn test
