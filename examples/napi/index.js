/* tslint:disable */
/* eslint-disable */
/* prettier-ignore */

/* auto-generated by NAPI-RS */

const { existsSync, readFileSync } = require('fs')
const { join } = require('path')

const { platform, arch } = process

let nativeBinding = null
let localFileExisted = false
let loadError = null

function isMusl() {
  // For Node 10
  if (!process.report || typeof process.report.getReport !== 'function') {
    try {
      const lddPath = require('child_process')
        .execSync('which ldd')
        .toString()
        .trim()
      return readFileSync(lddPath, 'utf8').includes('musl')
    } catch (e) {
      return true
    }
  } else {
    const { glibcVersionRuntime } = process.report.getReport().header
    return !glibcVersionRuntime
  }
}

switch (platform) {
  case 'android':
    switch (arch) {
      case 'arm64':
        localFileExisted = existsSync(
          join(__dirname, 'index.android-arm64.node'),
        )
        try {
          if (localFileExisted) {
            nativeBinding = require('./index.android-arm64.node')
          } else {
            nativeBinding = require('examples-android-arm64')
          }
        } catch (e) {
          loadError = e
        }
        break
      case 'arm':
        localFileExisted = existsSync(
          join(__dirname, 'index.android-arm-eabi.node'),
        )
        try {
          if (localFileExisted) {
            nativeBinding = require('./index.android-arm-eabi.node')
          } else {
            nativeBinding = require('examples-android-arm-eabi')
          }
        } catch (e) {
          loadError = e
        }
        break
      default:
        throw new Error(`Unsupported architecture on Android ${arch}`)
    }
    break
  case 'win32':
    switch (arch) {
      case 'x64':
        localFileExisted = existsSync(
          join(__dirname, 'index.win32-x64-msvc.node'),
        )
        try {
          if (localFileExisted) {
            nativeBinding = require('./index.win32-x64-msvc.node')
          } else {
            nativeBinding = require('examples-win32-x64-msvc')
          }
        } catch (e) {
          loadError = e
        }
        break
      case 'ia32':
        localFileExisted = existsSync(
          join(__dirname, 'index.win32-ia32-msvc.node'),
        )
        try {
          if (localFileExisted) {
            nativeBinding = require('./index.win32-ia32-msvc.node')
          } else {
            nativeBinding = require('examples-win32-ia32-msvc')
          }
        } catch (e) {
          loadError = e
        }
        break
      case 'arm64':
        localFileExisted = existsSync(
          join(__dirname, 'index.win32-arm64-msvc.node'),
        )
        try {
          if (localFileExisted) {
            nativeBinding = require('./index.win32-arm64-msvc.node')
          } else {
            nativeBinding = require('examples-win32-arm64-msvc')
          }
        } catch (e) {
          loadError = e
        }
        break
      default:
        throw new Error(`Unsupported architecture on Windows: ${arch}`)
    }
    break
  case 'darwin':
    localFileExisted = existsSync(
      join(__dirname, 'index.darwin-universal.node'),
    )
    try {
      if (localFileExisted) {
        nativeBinding = require('./index.darwin-universal.node')
      } else {
        nativeBinding = require('examples-darwin-universal')
      }
      break
    } catch {}
    switch (arch) {
      case 'x64':
        localFileExisted = existsSync(join(__dirname, 'index.darwin-x64.node'))
        try {
          if (localFileExisted) {
            nativeBinding = require('./index.darwin-x64.node')
          } else {
            nativeBinding = require('examples-darwin-x64')
          }
        } catch (e) {
          loadError = e
        }
        break
      case 'arm64':
        localFileExisted = existsSync(
          join(__dirname, 'index.darwin-arm64.node'),
        )
        try {
          if (localFileExisted) {
            nativeBinding = require('./index.darwin-arm64.node')
          } else {
            nativeBinding = require('examples-darwin-arm64')
          }
        } catch (e) {
          loadError = e
        }
        break
      default:
        throw new Error(`Unsupported architecture on macOS: ${arch}`)
    }
    break
  case 'freebsd':
    if (arch !== 'x64') {
      throw new Error(`Unsupported architecture on FreeBSD: ${arch}`)
    }
    localFileExisted = existsSync(join(__dirname, 'index.freebsd-x64.node'))
    try {
      if (localFileExisted) {
        nativeBinding = require('./index.freebsd-x64.node')
      } else {
        nativeBinding = require('examples-freebsd-x64')
      }
    } catch (e) {
      loadError = e
    }
    break
  case 'linux':
    switch (arch) {
      case 'x64':
        if (isMusl()) {
          localFileExisted = existsSync(
            join(__dirname, 'index.linux-x64-musl.node'),
          )
          try {
            if (localFileExisted) {
              nativeBinding = require('./index.linux-x64-musl.node')
            } else {
              nativeBinding = require('examples-linux-x64-musl')
            }
          } catch (e) {
            loadError = e
          }
        } else {
          localFileExisted = existsSync(
            join(__dirname, 'index.linux-x64-gnu.node'),
          )
          try {
            if (localFileExisted) {
              nativeBinding = require('./index.linux-x64-gnu.node')
            } else {
              nativeBinding = require('examples-linux-x64-gnu')
            }
          } catch (e) {
            loadError = e
          }
        }
        break
      case 'arm64':
        if (isMusl()) {
          localFileExisted = existsSync(
            join(__dirname, 'index.linux-arm64-musl.node'),
          )
          try {
            if (localFileExisted) {
              nativeBinding = require('./index.linux-arm64-musl.node')
            } else {
              nativeBinding = require('examples-linux-arm64-musl')
            }
          } catch (e) {
            loadError = e
          }
        } else {
          localFileExisted = existsSync(
            join(__dirname, 'index.linux-arm64-gnu.node'),
          )
          try {
            if (localFileExisted) {
              nativeBinding = require('./index.linux-arm64-gnu.node')
            } else {
              nativeBinding = require('examples-linux-arm64-gnu')
            }
          } catch (e) {
            loadError = e
          }
        }
        break
      case 'arm':
        localFileExisted = existsSync(
          join(__dirname, 'index.linux-arm-gnueabihf.node'),
        )
        try {
          if (localFileExisted) {
            nativeBinding = require('./index.linux-arm-gnueabihf.node')
          } else {
            nativeBinding = require('examples-linux-arm-gnueabihf')
          }
        } catch (e) {
          loadError = e
        }
        break
      default:
        throw new Error(`Unsupported architecture on Linux: ${arch}`)
    }
    break
  default:
    throw new Error(`Unsupported OS: ${platform}, architecture: ${arch}`)
}

if (!nativeBinding) {
  if (loadError) {
    throw loadError
  }
  throw new Error(`Failed to load native binding`)
}

const {
  DEFAULT_COST,
  getWords,
  getNums,
  sumNums,
  toJsObj,
  getNumArr,
  getNestedNumArr,
  readFileAsync,
  asyncMultiTwo,
  bigintAdd,
  createBigInt,
  createBigIntI64,
  bigintGetU64AsString,
  bigintFromI64,
  bigintFromI128,
  getCwd,
  optionEnd,
  optionStart,
  optionStartEnd,
  optionOnly,
  readFile,
  returnJsFunction,
  callbackReturnPromise,
  captureErrorInCallback,
  Animal,
  Dog,
  Bird,
  Blake2BHasher,
  Blake2BKey,
  Context,
  AnimalWithDefaultConstructor,
  NinjaTurtle,
  Assets,
  Asset,
  Optional,
  createObjectWithClassField,
  receiveObjectWithClassField,
  NotWritableClass,
  CustomFinalize,
  Width,
  plusOne,
  ClassWithFactory,
  dateToNumber,
  chronoDateToMillis,
  chronoDateAdd1Minute,
  eitherStringOrNumber,
  returnEither,
  either3,
  either4,
  JsClassForEither,
  AnotherClassForEither,
  receiveClassOrNumber,
  receiveMutClassOrNumber,
  receiveDifferentClass,
  returnEitherClass,
  eitherFromOption,
  eitherFromObjects,
  eitherBoolOrFunction,
  promiseInEither,
  Kind,
  Empty,
  CustomNumEnum,
  enumToI32,
  throwError,
  panic,
  receiveString,
  customStatusCode,
  createExternal,
  createExternalString,
  getExternal,
  mutateExternal,
  validateArray,
  validateBuffer,
  validateTypedArray,
  validateBigint,
  validateBoolean,
  validateDate,
  validateDateTime,
  validateExternal,
  validateFunction,
  validateHashMap,
  validateNull,
  validateUndefined,
  validateNumber,
  validatePromise,
  validateString,
  validateSymbol,
  validateOptional,
  returnUndefinedIfInvalid,
  returnUndefinedIfInvalidPromise,
  tsRename,
  overrideIndividualArgOnFunction,
  overrideIndividualArgOnFunctionWithCbArg,
  Fib,
  Fib2,
  Fib3,
  xxh64Alias,
  getMapping,
  sumMapping,
  mapOption,
  returnNull,
  returnUndefined,
  add,
  fibonacci,
  listObjKeys,
  createObj,
  getGlobal,
  getUndefined,
  getNull,
  receiveAllOptionalObject,
  ALIAS,
  fnReceivedAliased,
  receiveStrictObject,
  getStrFromObject,
  createObjWithProperty,
  getterFromObj,
  receiveObjectOnlyFromJs,
  asyncPlus100,
  JsRepo,
  JsRemote,
  CssRuleList,
  CssStyleSheet,
  AnotherCssStyleSheet,
  readPackageJson,
  getPackageJsonName,
  testSerdeRoundtrip,
  contains,
  concatStr,
  concatUtf16,
  concatLatin1,
  roundtripStr,
  setSymbolInObj,
  createSymbol,
  withoutAbortController,
  withAbortController,
  callThreadsafeFunction,
  threadsafeFunctionThrowError,
  threadsafeFunctionFatalMode,
  threadsafeFunctionFatalModeError,
  threadsafeFunctionClosureCapture,
  tsfnCallWithCallback,
  tsfnAsyncCall,
  acceptThreadsafeFunction,
  acceptThreadsafeFunctionFatal,
  acceptThreadsafeFunctionTupleArgs,
  tsfnReturnPromise,
  tsfnReturnPromiseTimeout,
  getBuffer,
  appendBuffer,
  getEmptyBuffer,
  convertU32Array,
  createExternalTypedArray,
  mutateTypedArray,
  derefUint8Array,
  bufferPassThrough,
  arrayBufferPassThrough,
  asyncReduceBuffer,
  runScript,
  xxh3,
  xxh2,
} = nativeBinding

module.exports.DEFAULT_COST = DEFAULT_COST
module.exports.getWords = getWords
module.exports.getNums = getNums
module.exports.sumNums = sumNums
module.exports.toJsObj = toJsObj
module.exports.getNumArr = getNumArr
module.exports.getNestedNumArr = getNestedNumArr
module.exports.readFileAsync = readFileAsync
module.exports.asyncMultiTwo = asyncMultiTwo
module.exports.bigintAdd = bigintAdd
module.exports.createBigInt = createBigInt
module.exports.createBigIntI64 = createBigIntI64
module.exports.bigintGetU64AsString = bigintGetU64AsString
module.exports.bigintFromI64 = bigintFromI64
module.exports.bigintFromI128 = bigintFromI128
module.exports.getCwd = getCwd
module.exports.optionEnd = optionEnd
module.exports.optionStart = optionStart
module.exports.optionStartEnd = optionStartEnd
module.exports.optionOnly = optionOnly
module.exports.readFile = readFile
module.exports.returnJsFunction = returnJsFunction
module.exports.callbackReturnPromise = callbackReturnPromise
module.exports.captureErrorInCallback = captureErrorInCallback
module.exports.Animal = Animal
module.exports.Dog = Dog
module.exports.Bird = Bird
module.exports.Blake2BHasher = Blake2BHasher
module.exports.Blake2BKey = Blake2BKey
module.exports.Context = Context
module.exports.AnimalWithDefaultConstructor = AnimalWithDefaultConstructor
module.exports.NinjaTurtle = NinjaTurtle
module.exports.Assets = Assets
module.exports.Asset = Asset
module.exports.Optional = Optional
module.exports.createObjectWithClassField = createObjectWithClassField
module.exports.receiveObjectWithClassField = receiveObjectWithClassField
module.exports.NotWritableClass = NotWritableClass
module.exports.CustomFinalize = CustomFinalize
module.exports.Width = Width
module.exports.plusOne = plusOne
module.exports.ClassWithFactory = ClassWithFactory
module.exports.dateToNumber = dateToNumber
module.exports.chronoDateToMillis = chronoDateToMillis
module.exports.chronoDateAdd1Minute = chronoDateAdd1Minute
module.exports.eitherStringOrNumber = eitherStringOrNumber
module.exports.returnEither = returnEither
module.exports.either3 = either3
module.exports.either4 = either4
module.exports.JsClassForEither = JsClassForEither
module.exports.AnotherClassForEither = AnotherClassForEither
module.exports.receiveClassOrNumber = receiveClassOrNumber
module.exports.receiveMutClassOrNumber = receiveMutClassOrNumber
module.exports.receiveDifferentClass = receiveDifferentClass
module.exports.returnEitherClass = returnEitherClass
module.exports.eitherFromOption = eitherFromOption
module.exports.eitherFromObjects = eitherFromObjects
module.exports.eitherBoolOrFunction = eitherBoolOrFunction
module.exports.promiseInEither = promiseInEither
module.exports.Kind = Kind
module.exports.Empty = Empty
module.exports.CustomNumEnum = CustomNumEnum
module.exports.enumToI32 = enumToI32
module.exports.throwError = throwError
module.exports.panic = panic
module.exports.receiveString = receiveString
module.exports.customStatusCode = customStatusCode
module.exports.createExternal = createExternal
module.exports.createExternalString = createExternalString
module.exports.getExternal = getExternal
module.exports.mutateExternal = mutateExternal
module.exports.validateArray = validateArray
module.exports.validateBuffer = validateBuffer
module.exports.validateTypedArray = validateTypedArray
module.exports.validateBigint = validateBigint
module.exports.validateBoolean = validateBoolean
module.exports.validateDate = validateDate
module.exports.validateDateTime = validateDateTime
module.exports.validateExternal = validateExternal
module.exports.validateFunction = validateFunction
module.exports.validateHashMap = validateHashMap
module.exports.validateNull = validateNull
module.exports.validateUndefined = validateUndefined
module.exports.validateNumber = validateNumber
module.exports.validatePromise = validatePromise
module.exports.validateString = validateString
module.exports.validateSymbol = validateSymbol
module.exports.validateOptional = validateOptional
module.exports.returnUndefinedIfInvalid = returnUndefinedIfInvalid
module.exports.returnUndefinedIfInvalidPromise = returnUndefinedIfInvalidPromise
module.exports.tsRename = tsRename
module.exports.overrideIndividualArgOnFunction = overrideIndividualArgOnFunction
module.exports.overrideIndividualArgOnFunctionWithCbArg =
  overrideIndividualArgOnFunctionWithCbArg
module.exports.Fib = Fib
module.exports.Fib2 = Fib2
module.exports.Fib3 = Fib3
module.exports.xxh64Alias = xxh64Alias
module.exports.getMapping = getMapping
module.exports.sumMapping = sumMapping
module.exports.mapOption = mapOption
module.exports.returnNull = returnNull
module.exports.returnUndefined = returnUndefined
module.exports.add = add
module.exports.fibonacci = fibonacci
module.exports.listObjKeys = listObjKeys
module.exports.createObj = createObj
module.exports.getGlobal = getGlobal
module.exports.getUndefined = getUndefined
module.exports.getNull = getNull
module.exports.receiveAllOptionalObject = receiveAllOptionalObject
module.exports.ALIAS = ALIAS
module.exports.fnReceivedAliased = fnReceivedAliased
module.exports.receiveStrictObject = receiveStrictObject
module.exports.getStrFromObject = getStrFromObject
module.exports.createObjWithProperty = createObjWithProperty
module.exports.getterFromObj = getterFromObj
module.exports.receiveObjectOnlyFromJs = receiveObjectOnlyFromJs
module.exports.asyncPlus100 = asyncPlus100
module.exports.JsRepo = JsRepo
module.exports.JsRemote = JsRemote
module.exports.CssRuleList = CssRuleList
module.exports.CssStyleSheet = CssStyleSheet
module.exports.AnotherCssStyleSheet = AnotherCssStyleSheet
module.exports.readPackageJson = readPackageJson
module.exports.getPackageJsonName = getPackageJsonName
module.exports.testSerdeRoundtrip = testSerdeRoundtrip
module.exports.contains = contains
module.exports.concatStr = concatStr
module.exports.concatUtf16 = concatUtf16
module.exports.concatLatin1 = concatLatin1
module.exports.roundtripStr = roundtripStr
module.exports.setSymbolInObj = setSymbolInObj
module.exports.createSymbol = createSymbol
module.exports.withoutAbortController = withoutAbortController
module.exports.withAbortController = withAbortController
module.exports.callThreadsafeFunction = callThreadsafeFunction
module.exports.threadsafeFunctionThrowError = threadsafeFunctionThrowError
module.exports.threadsafeFunctionFatalMode = threadsafeFunctionFatalMode
module.exports.threadsafeFunctionFatalModeError =
  threadsafeFunctionFatalModeError
module.exports.threadsafeFunctionClosureCapture =
  threadsafeFunctionClosureCapture
module.exports.tsfnCallWithCallback = tsfnCallWithCallback
module.exports.tsfnAsyncCall = tsfnAsyncCall
module.exports.acceptThreadsafeFunction = acceptThreadsafeFunction
module.exports.acceptThreadsafeFunctionFatal = acceptThreadsafeFunctionFatal
module.exports.acceptThreadsafeFunctionTupleArgs =
  acceptThreadsafeFunctionTupleArgs
module.exports.tsfnReturnPromise = tsfnReturnPromise
module.exports.tsfnReturnPromiseTimeout = tsfnReturnPromiseTimeout
module.exports.getBuffer = getBuffer
module.exports.appendBuffer = appendBuffer
module.exports.getEmptyBuffer = getEmptyBuffer
module.exports.convertU32Array = convertU32Array
module.exports.createExternalTypedArray = createExternalTypedArray
module.exports.mutateTypedArray = mutateTypedArray
module.exports.derefUint8Array = derefUint8Array
module.exports.bufferPassThrough = bufferPassThrough
module.exports.arrayBufferPassThrough = arrayBufferPassThrough
module.exports.asyncReduceBuffer = asyncReduceBuffer
module.exports.runScript = runScript
module.exports.xxh3 = xxh3
module.exports.xxh2 = xxh2
