name: Linux N-API@3

env:
  DEBUG: 'napi:*'

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  build_and_test:
    name: stable - x86_64-unknown-linux-gnu - node@10.2
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Setup node
        run: |
          wget https://nodejs.org/dist/v10.2.0/node-v10.2.0-linux-x64.tar.xz
          tar xf node-v10.2.0-linux-x64.tar.xz
          echo "$(pwd)/node-v10.2.0-linux-x64/bin" >> $GITHUB_PATH

      - name: Install stable
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable-x86_64-unknown-linux-gnu
          profile: minimal
          override: true

      - name: Generate Cargo.lock
        uses: actions-rs/cargo@v1
        with:
          command: generate-lockfile
      - name: Cache cargo registry
        uses: actions/cache@v2
        with:
          path: ~/.cargo/registry
          key: stable-napi3-cargo-registry-trimmed-${{ hashFiles('**/Cargo.lock') }}
      - name: Cache cargo index
        uses: actions/cache@v2
        with:
          path: ~/.cargo/git
          key: stable-napi3-cargo-index-trimmed-${{ hashFiles('**/Cargo.lock') }}
      - name: Cache cargo build
        uses: actions/cache@v2
        with:
          path: target
          key: stable-napi3-cargo-build-trimmed-${{ hashFiles('**/Cargo.lock') }}

      - name: Cache NPM dependencies
        uses: actions/cache@v2
        with:
          path: node_modules
          key: napi3-${{ hashFiles('yarn.lock') }}

      - name: 'Install dependencies'
        run: yarn add ava@2 --dev --ignore-engines -W

      - name: 'Build TypeScript'
        run: yarn --ignore-engines build

      - name: Check build
        uses: actions-rs/cargo@v1
        with:
          command: check
          args: --all --bins --examples --tests -vvv

      - name: Unit tests
        run: |
          yarn --cwd ./examples/napi-compat-mode --ignore-engines build-napi3
          yarn --cwd ./examples/napi --ignore-engines build-napi3
          yarn --ignore-engines test
        env:
          RUST_BACKTRACE: 1

      - name: Clear the cargo caches
        run: |
          cargo install cargo-cache --no-default-features --features ci-autoclean
          cargo-cache
